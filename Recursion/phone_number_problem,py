def letter_combinations(digits):
    if not digits:
        return []
    
    # Mapping of digits to corresponding letters
    phone_map = {
        "2": "abc", "3": "def", "4": "ghi", "5": "jkl",
        "6": "mno", "7": "pqrs", "8": "tuv", "9": "wxyz"
    }
    
    result = []

    def backtrack(p, up):
        if not up:  # Base case: if unprocessed is empty, store the result
            result.append(p)
            return
        
        ch = up[0]  # Take the first digit
        letters = phone_map[ch]  # Get corresponding letters

        for letter in letters:  # Try each letter
            backtrack(p + letter, up[1:])  # Recurse with next digit
    
    backtrack("", digits)
    return result

# Test the function
print(letter_combinations("23"))
